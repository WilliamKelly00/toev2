// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: toe/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgSubmitQna struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ParentTopic string `protobuf:"bytes,2,opt,name=parentTopic,proto3" json:"parentTopic,omitempty"`
	Question    string `protobuf:"bytes,3,opt,name=question,proto3" json:"question,omitempty"`
	OpA         string `protobuf:"bytes,4,opt,name=opA,proto3" json:"opA,omitempty"`
	OpB         string `protobuf:"bytes,5,opt,name=opB,proto3" json:"opB,omitempty"`
	OpC         string `protobuf:"bytes,6,opt,name=opC,proto3" json:"opC,omitempty"`
	OpD         string `protobuf:"bytes,7,opt,name=opD,proto3" json:"opD,omitempty"`
	Qsh         string `protobuf:"bytes,8,opt,name=qsh,proto3" json:"qsh,omitempty"`
	Reward      string `protobuf:"bytes,9,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (m *MsgSubmitQna) Reset()         { *m = MsgSubmitQna{} }
func (m *MsgSubmitQna) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitQna) ProtoMessage()    {}
func (*MsgSubmitQna) Descriptor() ([]byte, []int) {
	return fileDescriptor_9899a8de15c32647, []int{0}
}
func (m *MsgSubmitQna) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitQna) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitQna.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitQna) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitQna.Merge(m, src)
}
func (m *MsgSubmitQna) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitQna) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitQna.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitQna proto.InternalMessageInfo

func (m *MsgSubmitQna) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubmitQna) GetParentTopic() string {
	if m != nil {
		return m.ParentTopic
	}
	return ""
}

func (m *MsgSubmitQna) GetQuestion() string {
	if m != nil {
		return m.Question
	}
	return ""
}

func (m *MsgSubmitQna) GetOpA() string {
	if m != nil {
		return m.OpA
	}
	return ""
}

func (m *MsgSubmitQna) GetOpB() string {
	if m != nil {
		return m.OpB
	}
	return ""
}

func (m *MsgSubmitQna) GetOpC() string {
	if m != nil {
		return m.OpC
	}
	return ""
}

func (m *MsgSubmitQna) GetOpD() string {
	if m != nil {
		return m.OpD
	}
	return ""
}

func (m *MsgSubmitQna) GetQsh() string {
	if m != nil {
		return m.Qsh
	}
	return ""
}

func (m *MsgSubmitQna) GetReward() string {
	if m != nil {
		return m.Reward
	}
	return ""
}

type MsgSubmitQnaResponse struct {
}

func (m *MsgSubmitQnaResponse) Reset()         { *m = MsgSubmitQnaResponse{} }
func (m *MsgSubmitQnaResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitQnaResponse) ProtoMessage()    {}
func (*MsgSubmitQnaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9899a8de15c32647, []int{1}
}
func (m *MsgSubmitQnaResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitQnaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitQnaResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitQnaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitQnaResponse.Merge(m, src)
}
func (m *MsgSubmitQnaResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitQnaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitQnaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitQnaResponse proto.InternalMessageInfo

type MsgAnswerQna struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Qsh     string `protobuf:"bytes,2,opt,name=qsh,proto3" json:"qsh,omitempty"`
}

func (m *MsgAnswerQna) Reset()         { *m = MsgAnswerQna{} }
func (m *MsgAnswerQna) String() string { return proto.CompactTextString(m) }
func (*MsgAnswerQna) ProtoMessage()    {}
func (*MsgAnswerQna) Descriptor() ([]byte, []int) {
	return fileDescriptor_9899a8de15c32647, []int{2}
}
func (m *MsgAnswerQna) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAnswerQna) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAnswerQna.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAnswerQna) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAnswerQna.Merge(m, src)
}
func (m *MsgAnswerQna) XXX_Size() int {
	return m.Size()
}
func (m *MsgAnswerQna) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAnswerQna.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAnswerQna proto.InternalMessageInfo

func (m *MsgAnswerQna) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAnswerQna) GetQsh() string {
	if m != nil {
		return m.Qsh
	}
	return ""
}

type MsgAnswerQnaResponse struct {
}

func (m *MsgAnswerQnaResponse) Reset()         { *m = MsgAnswerQnaResponse{} }
func (m *MsgAnswerQnaResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAnswerQnaResponse) ProtoMessage()    {}
func (*MsgAnswerQnaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9899a8de15c32647, []int{3}
}
func (m *MsgAnswerQnaResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAnswerQnaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAnswerQnaResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAnswerQnaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAnswerQnaResponse.Merge(m, src)
}
func (m *MsgAnswerQnaResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAnswerQnaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAnswerQnaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAnswerQnaResponse proto.InternalMessageInfo

type MsgCreateTopic struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentTopic string `protobuf:"bytes,3,opt,name=parentTopic,proto3" json:"parentTopic,omitempty"`
}

func (m *MsgCreateTopic) Reset()         { *m = MsgCreateTopic{} }
func (m *MsgCreateTopic) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTopic) ProtoMessage()    {}
func (*MsgCreateTopic) Descriptor() ([]byte, []int) {
	return fileDescriptor_9899a8de15c32647, []int{4}
}
func (m *MsgCreateTopic) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTopic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTopic.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTopic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTopic.Merge(m, src)
}
func (m *MsgCreateTopic) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTopic) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTopic.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTopic proto.InternalMessageInfo

func (m *MsgCreateTopic) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTopic) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateTopic) GetParentTopic() string {
	if m != nil {
		return m.ParentTopic
	}
	return ""
}

type MsgCreateTopicResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateTopicResponse) Reset()         { *m = MsgCreateTopicResponse{} }
func (m *MsgCreateTopicResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTopicResponse) ProtoMessage()    {}
func (*MsgCreateTopicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9899a8de15c32647, []int{5}
}
func (m *MsgCreateTopicResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTopicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTopicResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTopicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTopicResponse.Merge(m, src)
}
func (m *MsgCreateTopicResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTopicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTopicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTopicResponse proto.InternalMessageInfo

func (m *MsgCreateTopicResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateTopic struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ParentTopic string `protobuf:"bytes,4,opt,name=parentTopic,proto3" json:"parentTopic,omitempty"`
}

func (m *MsgUpdateTopic) Reset()         { *m = MsgUpdateTopic{} }
func (m *MsgUpdateTopic) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTopic) ProtoMessage()    {}
func (*MsgUpdateTopic) Descriptor() ([]byte, []int) {
	return fileDescriptor_9899a8de15c32647, []int{6}
}
func (m *MsgUpdateTopic) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTopic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTopic.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTopic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTopic.Merge(m, src)
}
func (m *MsgUpdateTopic) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTopic) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTopic.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTopic proto.InternalMessageInfo

func (m *MsgUpdateTopic) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateTopic) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateTopic) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgUpdateTopic) GetParentTopic() string {
	if m != nil {
		return m.ParentTopic
	}
	return ""
}

type MsgUpdateTopicResponse struct {
}

func (m *MsgUpdateTopicResponse) Reset()         { *m = MsgUpdateTopicResponse{} }
func (m *MsgUpdateTopicResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTopicResponse) ProtoMessage()    {}
func (*MsgUpdateTopicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9899a8de15c32647, []int{7}
}
func (m *MsgUpdateTopicResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTopicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTopicResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTopicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTopicResponse.Merge(m, src)
}
func (m *MsgUpdateTopicResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTopicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTopicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTopicResponse proto.InternalMessageInfo

type MsgDeleteTopic struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteTopic) Reset()         { *m = MsgDeleteTopic{} }
func (m *MsgDeleteTopic) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTopic) ProtoMessage()    {}
func (*MsgDeleteTopic) Descriptor() ([]byte, []int) {
	return fileDescriptor_9899a8de15c32647, []int{8}
}
func (m *MsgDeleteTopic) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTopic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTopic.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTopic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTopic.Merge(m, src)
}
func (m *MsgDeleteTopic) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTopic) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTopic.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTopic proto.InternalMessageInfo

func (m *MsgDeleteTopic) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteTopic) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteTopicResponse struct {
}

func (m *MsgDeleteTopicResponse) Reset()         { *m = MsgDeleteTopicResponse{} }
func (m *MsgDeleteTopicResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTopicResponse) ProtoMessage()    {}
func (*MsgDeleteTopicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9899a8de15c32647, []int{9}
}
func (m *MsgDeleteTopicResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTopicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTopicResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTopicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTopicResponse.Merge(m, src)
}
func (m *MsgDeleteTopicResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTopicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTopicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTopicResponse proto.InternalMessageInfo

type MsgAnswerQuestion struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Qsh     string `protobuf:"bytes,2,opt,name=qsh,proto3" json:"qsh,omitempty"`
	Backup  string `protobuf:"bytes,3,opt,name=backup,proto3" json:"backup,omitempty"`
}

func (m *MsgAnswerQuestion) Reset()         { *m = MsgAnswerQuestion{} }
func (m *MsgAnswerQuestion) String() string { return proto.CompactTextString(m) }
func (*MsgAnswerQuestion) ProtoMessage()    {}
func (*MsgAnswerQuestion) Descriptor() ([]byte, []int) {
	return fileDescriptor_9899a8de15c32647, []int{10}
}
func (m *MsgAnswerQuestion) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAnswerQuestion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAnswerQuestion.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAnswerQuestion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAnswerQuestion.Merge(m, src)
}
func (m *MsgAnswerQuestion) XXX_Size() int {
	return m.Size()
}
func (m *MsgAnswerQuestion) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAnswerQuestion.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAnswerQuestion proto.InternalMessageInfo

func (m *MsgAnswerQuestion) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAnswerQuestion) GetQsh() string {
	if m != nil {
		return m.Qsh
	}
	return ""
}

func (m *MsgAnswerQuestion) GetBackup() string {
	if m != nil {
		return m.Backup
	}
	return ""
}

type MsgAnswerQuestionResponse struct {
}

func (m *MsgAnswerQuestionResponse) Reset()         { *m = MsgAnswerQuestionResponse{} }
func (m *MsgAnswerQuestionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAnswerQuestionResponse) ProtoMessage()    {}
func (*MsgAnswerQuestionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9899a8de15c32647, []int{11}
}
func (m *MsgAnswerQuestionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAnswerQuestionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAnswerQuestionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAnswerQuestionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAnswerQuestionResponse.Merge(m, src)
}
func (m *MsgAnswerQuestionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAnswerQuestionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAnswerQuestionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAnswerQuestionResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgSubmitQna)(nil), "WilliamKelly00.toev2.toe.MsgSubmitQna")
	proto.RegisterType((*MsgSubmitQnaResponse)(nil), "WilliamKelly00.toev2.toe.MsgSubmitQnaResponse")
	proto.RegisterType((*MsgAnswerQna)(nil), "WilliamKelly00.toev2.toe.MsgAnswerQna")
	proto.RegisterType((*MsgAnswerQnaResponse)(nil), "WilliamKelly00.toev2.toe.MsgAnswerQnaResponse")
	proto.RegisterType((*MsgCreateTopic)(nil), "WilliamKelly00.toev2.toe.MsgCreateTopic")
	proto.RegisterType((*MsgCreateTopicResponse)(nil), "WilliamKelly00.toev2.toe.MsgCreateTopicResponse")
	proto.RegisterType((*MsgUpdateTopic)(nil), "WilliamKelly00.toev2.toe.MsgUpdateTopic")
	proto.RegisterType((*MsgUpdateTopicResponse)(nil), "WilliamKelly00.toev2.toe.MsgUpdateTopicResponse")
	proto.RegisterType((*MsgDeleteTopic)(nil), "WilliamKelly00.toev2.toe.MsgDeleteTopic")
	proto.RegisterType((*MsgDeleteTopicResponse)(nil), "WilliamKelly00.toev2.toe.MsgDeleteTopicResponse")
	proto.RegisterType((*MsgAnswerQuestion)(nil), "WilliamKelly00.toev2.toe.MsgAnswerQuestion")
	proto.RegisterType((*MsgAnswerQuestionResponse)(nil), "WilliamKelly00.toev2.toe.MsgAnswerQuestionResponse")
}

func init() { proto.RegisterFile("toe/tx.proto", fileDescriptor_9899a8de15c32647) }

var fileDescriptor_9899a8de15c32647 = []byte{
	// 527 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x41, 0x6f, 0xda, 0x30,
	0x18, 0x25, 0x09, 0xa5, 0xe5, 0x6b, 0xc5, 0x36, 0x6b, 0x42, 0x5e, 0x26, 0x45, 0x55, 0x0e, 0x13,
	0x52, 0xa5, 0x04, 0xb5, 0xb7, 0xdd, 0x0a, 0xec, 0x34, 0x71, 0x18, 0xdb, 0x54, 0x69, 0xa7, 0x85,
	0x60, 0x41, 0xb4, 0x10, 0x87, 0xd8, 0xac, 0xed, 0x7d, 0x3f, 0x60, 0x3f, 0x6b, 0xc7, 0x1e, 0x7b,
	0x9c, 0xe0, 0x8f, 0x54, 0x71, 0xe2, 0xe0, 0x16, 0x08, 0x70, 0x89, 0xe2, 0x97, 0xf7, 0xbd, 0xf7,
	0xd9, 0xdf, 0x8b, 0xe1, 0x8c, 0x53, 0xe2, 0xf2, 0x3b, 0x27, 0x4e, 0x28, 0xa7, 0x08, 0xdf, 0x04,
	0x61, 0x18, 0x78, 0xd3, 0xcf, 0x24, 0x0c, 0xef, 0xdb, 0x6d, 0x87, 0x53, 0xf2, 0xfb, 0x32, 0x7d,
	0x9a, 0xaf, 0x04, 0x8f, 0xc6, 0x81, 0x9f, 0x51, 0xed, 0x47, 0x0d, 0xce, 0xfa, 0x6c, 0xfc, 0x75,
	0x3e, 0x9c, 0x06, 0xfc, 0x4b, 0xe4, 0x21, 0x0c, 0xc7, 0x7e, 0x42, 0x3c, 0x4e, 0x13, 0xac, 0x9d,
	0x6b, 0xad, 0xfa, 0x40, 0x2e, 0xd1, 0x39, 0x9c, 0xc6, 0x5e, 0x42, 0x22, 0xfe, 0x2d, 0xad, 0xc7,
	0xba, 0xf8, 0xaa, 0x42, 0xc8, 0x84, 0x93, 0xd9, 0x9c, 0x30, 0x1e, 0xd0, 0x08, 0x1b, 0xe2, 0x73,
	0xb1, 0x46, 0xaf, 0xc1, 0xa0, 0xf1, 0x35, 0xae, 0x0a, 0x38, 0x7d, 0xcd, 0x90, 0x0e, 0x3e, 0x92,
	0x48, 0x27, 0x43, 0xba, 0xb8, 0x26, 0x91, 0x6e, 0x86, 0xf4, 0xf0, 0xb1, 0x44, 0x7a, 0x29, 0x32,
	0x63, 0x13, 0x7c, 0x92, 0x21, 0x33, 0x36, 0x41, 0x4d, 0xa8, 0x25, 0xe4, 0xd6, 0x4b, 0x46, 0xb8,
	0x2e, 0xc0, 0x7c, 0x65, 0x37, 0xe1, 0xad, 0xba, 0xb3, 0x01, 0x61, 0x31, 0x8d, 0x18, 0xb1, 0x3f,
	0x8a, 0x1d, 0x5f, 0x47, 0xec, 0x96, 0x24, 0xe5, 0x3b, 0xce, 0xbd, 0xf4, 0xc2, 0x2b, 0xd7, 0x2c,
	0x6a, 0x0b, 0xcd, 0x9f, 0xd0, 0xe8, 0xb3, 0x71, 0x37, 0xad, 0x23, 0xd9, 0x59, 0x6c, 0x57, 0x45,
	0x50, 0x8d, 0xbc, 0x29, 0xc9, 0x65, 0xc5, 0xfb, 0xcb, 0xb3, 0x35, 0xd6, 0xce, 0xd6, 0x6e, 0x41,
	0xf3, 0xb9, 0x83, 0xf4, 0x46, 0x0d, 0xd0, 0x83, 0x91, 0x30, 0xa9, 0x0e, 0xf4, 0x60, 0x64, 0xc7,
	0xa2, 0x97, 0xef, 0xf1, 0x68, 0x8f, 0x5e, 0xb2, 0x5a, 0x5d, 0xd6, 0x16, 0xbd, 0x19, 0xdb, 0x7b,
	0xab, 0xae, 0xf7, 0x86, 0x45, 0x6f, 0x8a, 0xa3, 0x72, 0xd6, 0x69, 0x2f, 0x3d, 0x12, 0x92, 0x83,
	0x7b, 0xc9, 0x55, 0x95, 0xda, 0x42, 0xf5, 0x06, 0xde, 0xac, 0xa6, 0x20, 0x03, 0x76, 0xc0, 0x18,
	0xd3, 0xc8, 0x0c, 0x3d, 0xff, 0xd7, 0x3c, 0xce, 0x37, 0x9a, 0xaf, 0xec, 0xf7, 0xf0, 0x6e, 0x4d,
	0x58, 0xba, 0x5e, 0xfe, 0x39, 0x02, 0xa3, 0xcf, 0xc6, 0xc8, 0x87, 0xfa, 0xea, 0x77, 0xf9, 0xe0,
	0x6c, 0xfb, 0xd7, 0x1c, 0x35, 0x7c, 0xa6, 0xb3, 0x1f, 0xaf, 0x18, 0xaa, 0x0f, 0xf5, 0x55, 0x42,
	0xcb, 0x4d, 0x0a, 0xde, 0x0e, 0x93, 0xb5, 0xd4, 0xa2, 0x00, 0x4e, 0xd5, 0xc8, 0xb6, 0x4a, 0xcb,
	0x15, 0xa6, 0xd9, 0xde, 0x97, 0xa9, 0x5a, 0xa9, 0x89, 0x2c, 0xb7, 0x52, 0x98, 0x3b, 0xac, 0x36,
	0x64, 0x2e, 0xb5, 0x52, 0x03, 0x57, 0x6e, 0xa5, 0x30, 0x77, 0x58, 0x6d, 0x08, 0x22, 0x4a, 0xa0,
	0xf1, 0x22, 0x85, 0x17, 0xfb, 0x8c, 0x20, 0x27, 0x9b, 0x57, 0x07, 0x90, 0xa5, 0x67, 0xe7, 0xd3,
	0xbf, 0x85, 0xa5, 0x3d, 0x2c, 0x2c, 0xed, 0xff, 0xc2, 0xd2, 0xfe, 0x2e, 0xad, 0xca, 0xc3, 0xd2,
	0xaa, 0x3c, 0x2e, 0xad, 0xca, 0x8f, 0x8b, 0x71, 0xc0, 0x27, 0xf3, 0xa1, 0xe3, 0xd3, 0xa9, 0xfb,
	0x5c, 0xd8, 0x15, 0xc2, 0xee, 0x9d, 0x2b, 0xae, 0xff, 0xfb, 0x98, 0xb0, 0x61, 0x4d, 0xdc, 0xff,
	0x57, 0x4f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa7, 0xa3, 0xc7, 0xbc, 0x3a, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	SubmitQna(ctx context.Context, in *MsgSubmitQna, opts ...grpc.CallOption) (*MsgSubmitQnaResponse, error)
	AnswerQna(ctx context.Context, in *MsgAnswerQna, opts ...grpc.CallOption) (*MsgAnswerQnaResponse, error)
	CreateTopic(ctx context.Context, in *MsgCreateTopic, opts ...grpc.CallOption) (*MsgCreateTopicResponse, error)
	UpdateTopic(ctx context.Context, in *MsgUpdateTopic, opts ...grpc.CallOption) (*MsgUpdateTopicResponse, error)
	DeleteTopic(ctx context.Context, in *MsgDeleteTopic, opts ...grpc.CallOption) (*MsgDeleteTopicResponse, error)
	AnswerQuestion(ctx context.Context, in *MsgAnswerQuestion, opts ...grpc.CallOption) (*MsgAnswerQuestionResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) SubmitQna(ctx context.Context, in *MsgSubmitQna, opts ...grpc.CallOption) (*MsgSubmitQnaResponse, error) {
	out := new(MsgSubmitQnaResponse)
	err := c.cc.Invoke(ctx, "/WilliamKelly00.toev2.toe.Msg/SubmitQna", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AnswerQna(ctx context.Context, in *MsgAnswerQna, opts ...grpc.CallOption) (*MsgAnswerQnaResponse, error) {
	out := new(MsgAnswerQnaResponse)
	err := c.cc.Invoke(ctx, "/WilliamKelly00.toev2.toe.Msg/AnswerQna", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTopic(ctx context.Context, in *MsgCreateTopic, opts ...grpc.CallOption) (*MsgCreateTopicResponse, error) {
	out := new(MsgCreateTopicResponse)
	err := c.cc.Invoke(ctx, "/WilliamKelly00.toev2.toe.Msg/CreateTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateTopic(ctx context.Context, in *MsgUpdateTopic, opts ...grpc.CallOption) (*MsgUpdateTopicResponse, error) {
	out := new(MsgUpdateTopicResponse)
	err := c.cc.Invoke(ctx, "/WilliamKelly00.toev2.toe.Msg/UpdateTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteTopic(ctx context.Context, in *MsgDeleteTopic, opts ...grpc.CallOption) (*MsgDeleteTopicResponse, error) {
	out := new(MsgDeleteTopicResponse)
	err := c.cc.Invoke(ctx, "/WilliamKelly00.toev2.toe.Msg/DeleteTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AnswerQuestion(ctx context.Context, in *MsgAnswerQuestion, opts ...grpc.CallOption) (*MsgAnswerQuestionResponse, error) {
	out := new(MsgAnswerQuestionResponse)
	err := c.cc.Invoke(ctx, "/WilliamKelly00.toev2.toe.Msg/AnswerQuestion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	SubmitQna(context.Context, *MsgSubmitQna) (*MsgSubmitQnaResponse, error)
	AnswerQna(context.Context, *MsgAnswerQna) (*MsgAnswerQnaResponse, error)
	CreateTopic(context.Context, *MsgCreateTopic) (*MsgCreateTopicResponse, error)
	UpdateTopic(context.Context, *MsgUpdateTopic) (*MsgUpdateTopicResponse, error)
	DeleteTopic(context.Context, *MsgDeleteTopic) (*MsgDeleteTopicResponse, error)
	AnswerQuestion(context.Context, *MsgAnswerQuestion) (*MsgAnswerQuestionResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) SubmitQna(ctx context.Context, req *MsgSubmitQna) (*MsgSubmitQnaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitQna not implemented")
}
func (*UnimplementedMsgServer) AnswerQna(ctx context.Context, req *MsgAnswerQna) (*MsgAnswerQnaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnswerQna not implemented")
}
func (*UnimplementedMsgServer) CreateTopic(ctx context.Context, req *MsgCreateTopic) (*MsgCreateTopicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTopic not implemented")
}
func (*UnimplementedMsgServer) UpdateTopic(ctx context.Context, req *MsgUpdateTopic) (*MsgUpdateTopicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTopic not implemented")
}
func (*UnimplementedMsgServer) DeleteTopic(ctx context.Context, req *MsgDeleteTopic) (*MsgDeleteTopicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTopic not implemented")
}
func (*UnimplementedMsgServer) AnswerQuestion(ctx context.Context, req *MsgAnswerQuestion) (*MsgAnswerQuestionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnswerQuestion not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_SubmitQna_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubmitQna)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubmitQna(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WilliamKelly00.toev2.toe.Msg/SubmitQna",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubmitQna(ctx, req.(*MsgSubmitQna))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AnswerQna_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAnswerQna)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AnswerQna(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WilliamKelly00.toev2.toe.Msg/AnswerQna",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AnswerQna(ctx, req.(*MsgAnswerQna))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTopic)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WilliamKelly00.toev2.toe.Msg/CreateTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTopic(ctx, req.(*MsgCreateTopic))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateTopic)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WilliamKelly00.toev2.toe.Msg/UpdateTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateTopic(ctx, req.(*MsgUpdateTopic))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteTopic)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WilliamKelly00.toev2.toe.Msg/DeleteTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteTopic(ctx, req.(*MsgDeleteTopic))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AnswerQuestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAnswerQuestion)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AnswerQuestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WilliamKelly00.toev2.toe.Msg/AnswerQuestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AnswerQuestion(ctx, req.(*MsgAnswerQuestion))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "WilliamKelly00.toev2.toe.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SubmitQna",
			Handler:    _Msg_SubmitQna_Handler,
		},
		{
			MethodName: "AnswerQna",
			Handler:    _Msg_AnswerQna_Handler,
		},
		{
			MethodName: "CreateTopic",
			Handler:    _Msg_CreateTopic_Handler,
		},
		{
			MethodName: "UpdateTopic",
			Handler:    _Msg_UpdateTopic_Handler,
		},
		{
			MethodName: "DeleteTopic",
			Handler:    _Msg_DeleteTopic_Handler,
		},
		{
			MethodName: "AnswerQuestion",
			Handler:    _Msg_AnswerQuestion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "toe/tx.proto",
}

func (m *MsgSubmitQna) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitQna) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitQna) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Reward) > 0 {
		i -= len(m.Reward)
		copy(dAtA[i:], m.Reward)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Reward)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Qsh) > 0 {
		i -= len(m.Qsh)
		copy(dAtA[i:], m.Qsh)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Qsh)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.OpD) > 0 {
		i -= len(m.OpD)
		copy(dAtA[i:], m.OpD)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OpD)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.OpC) > 0 {
		i -= len(m.OpC)
		copy(dAtA[i:], m.OpC)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OpC)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.OpB) > 0 {
		i -= len(m.OpB)
		copy(dAtA[i:], m.OpB)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OpB)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.OpA) > 0 {
		i -= len(m.OpA)
		copy(dAtA[i:], m.OpA)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OpA)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Question) > 0 {
		i -= len(m.Question)
		copy(dAtA[i:], m.Question)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Question)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ParentTopic) > 0 {
		i -= len(m.ParentTopic)
		copy(dAtA[i:], m.ParentTopic)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ParentTopic)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubmitQnaResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitQnaResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitQnaResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAnswerQna) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAnswerQna) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAnswerQna) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Qsh) > 0 {
		i -= len(m.Qsh)
		copy(dAtA[i:], m.Qsh)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Qsh)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAnswerQnaResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAnswerQnaResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAnswerQnaResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateTopic) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTopic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTopic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ParentTopic) > 0 {
		i -= len(m.ParentTopic)
		copy(dAtA[i:], m.ParentTopic)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ParentTopic)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTopicResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTopicResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTopicResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTopic) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTopic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTopic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ParentTopic) > 0 {
		i -= len(m.ParentTopic)
		copy(dAtA[i:], m.ParentTopic)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ParentTopic)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTopicResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTopicResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTopicResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTopic) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTopic) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTopic) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTopicResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTopicResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTopicResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAnswerQuestion) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAnswerQuestion) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAnswerQuestion) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Backup) > 0 {
		i -= len(m.Backup)
		copy(dAtA[i:], m.Backup)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Backup)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Qsh) > 0 {
		i -= len(m.Qsh)
		copy(dAtA[i:], m.Qsh)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Qsh)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAnswerQuestionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAnswerQuestionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAnswerQuestionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgSubmitQna) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ParentTopic)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Question)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OpA)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OpB)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OpC)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OpD)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Qsh)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Reward)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubmitQnaResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAnswerQna) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Qsh)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAnswerQnaResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateTopic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ParentTopic)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTopicResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateTopic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ParentTopic)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateTopicResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteTopic) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteTopicResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAnswerQuestion) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Qsh)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Backup)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAnswerQuestionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgSubmitQna) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitQna: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitQna: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentTopic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentTopic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Question", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Question = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpA", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpA = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpB", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpB = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpC", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpC = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OpD", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OpD = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Qsh", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Qsh = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reward", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reward = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitQnaResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitQnaResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitQnaResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAnswerQna) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAnswerQna: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAnswerQna: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Qsh", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Qsh = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAnswerQnaResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAnswerQnaResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAnswerQnaResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTopic) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTopic: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTopic: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentTopic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentTopic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTopicResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTopicResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTopicResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTopic) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTopic: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTopic: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentTopic", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ParentTopic = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTopicResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTopicResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTopicResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTopic) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTopic: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTopic: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTopicResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTopicResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTopicResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAnswerQuestion) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAnswerQuestion: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAnswerQuestion: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Qsh", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Qsh = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Backup", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Backup = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAnswerQuestionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAnswerQuestionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAnswerQuestionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
